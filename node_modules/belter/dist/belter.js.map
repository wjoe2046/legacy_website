{"version":3,"sources":["webpack://belter/webpack/universalModuleDefinition","webpack://belter/webpack/bootstrap","webpack://belter/./src/device.js","webpack://belter/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://belter/./node_modules/zalgo-promise/src/utils.js","webpack://belter/./node_modules/zalgo-promise/src/exceptions.js","webpack://belter/./node_modules/zalgo-promise/src/flush.js","webpack://belter/./node_modules/zalgo-promise/src/promise.js","webpack://belter/./node_modules/cross-domain-utils/src/utils.js","webpack://belter/./node_modules/cross-domain-utils/src/constants.js","webpack://belter/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://belter/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://belter/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://belter/./src/util.js","webpack://belter/./src/dom.js","webpack://belter/./src/constants.js","webpack://belter/./src/storage.js","webpack://belter/./src/experiment.js","webpack://belter/./src/global.js","webpack://belter/./src/http.js","webpack://belter/./src/types.js","webpack://belter/./src/decorators.js","webpack://belter/./src/css.js","webpack://belter/./src/test.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","getUserAgent","window","navigator","mockUserAgent","userAgent","isDevice","match","isWebView","test","isStandAlone","standalone","matchMedia","matches","isFacebookWebView","ua","indexOf","isFirefoxIOS","isEdgeIOS","isOperaMini","isAndroid","isIos","isGoogleSearchApp","isQQBrowser","isIosWebview","isAndroidWebview","isIE","document","documentMode","Boolean","isIECompHeader","mHttp","querySelector","mContent","isElectron","process","versions","electron","isIEIntranet","status","err","isMacOsCna","supportsPopups","isChrome","isSafari","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","Window","constructor","toString","then","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushPromise","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","Zalgo","awaitActive","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","canReadFromWindow","getActualDomain","PROTOCOL","parent","getParent","host","getDomain","domain","mockDomain","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","desc","getOwnPropertyDescriptor","isActuallySameDomain","isSameDomain","mockclosed","top","iframeIndex","collection","safeIndexOf","frame","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","isWindow","obj","__cross_domain_utils_window_check__","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","base64decode","atob","decodeURIComponent","Array","charCodeAt","slice","join","uniqueID","chars","charAt","floor","Date","toISOString","toLowerCase","getGlobal","global","__GLOBAL__","objectIDs","getObjectID","uid","serializeArgs","JSON","stringify","subkey","val","memoizedFunctions","memoize","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","now","reset","clear","promiseIdentity","memoizePromise","memoizedPromiseFunction","promisify","promisifiedFunction","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","hashStr","pow","sqrt","strHashStr","total","abs","pattern","regmatch","awaitKey","configurable","stringifyError","level","newErr","stringifyErrorMessage","defaultMessage","domainMatches","hostname","split","patchMethod","original","callOriginal","extend","perc","pixels","percentage","round","min","max","regexMap","regexp","svgToBase64","svg","objFilter","filter","identity","regexTokenize","text","token","promiseDebounce","localPromise","safeInterval","loop","isInteger","isFloat","serializePrimitive","deserializePrimitive","parseFloat","dotify","prefix","newobj","isArray","every","undotify","keyResult","parts","part","isLast","isIndex","eventEmitter","triggered","on","eventName","handlerList","cancelled","listener","trigger","triggerOnce","camelToDasherize","string","g","dasherizeToCamel","toUpperCase","capitalizeFirstLetter","path","def","pathParts","safeTimeout","interval","defineLazyProp","arrayFrom","isObject","isObjectObject","isPlainObject","prototype","replaceObject","replacer","fullKey","itemKey","child","copyProp","descriptor","regex","start","RegExp","groups","end","regexAll","isDefined","cycle","debounce","isRegex","weakMapMemoize","arg","weakMapMemoizePromise","cleanup","tasks","cleaned","register","task","shift","tryCatch","removeFromArray","arr","assertExists","thing","unique","isDocumentReady","body","readyState","urlEncode","waitForWindowReady","addEventListener","waitForDocumentReady","setInterval","clearInterval","waitForDocumentBody","parseQuery","queryString","params","pair","getQueryParam","search","urlWillRedirectPage","url","href","formatQuery","extendQuery","originalQuery","props","extendUrl","query","originalUrl","originalHash","hashString","redirect","hasMetaViewPort","meta","screen","width","isElementVisible","el","offsetWidth","offsetHeight","getClientRects","getPerformance","performance","timing","connectEnd","navigationStart","enablePerformance","getPageRenderTime","domInteractive","htmlEncode","html","isBrowser","querySelectorAll","selector","onClick","element","event","keyCode","getScript","scripts","getElementsByTagName","script","src","isLocalStorageEnabled","localStorage","setItem","getItem","removeItem","getBrowserLocales","nav","locales","languages","language","userLanguage","locale","country","lang","appendChild","container","isElement","Element","nodeType","style","getElementSafe","id","getElement","elementReady","PopupOpenError","popup","height","left","outerWidth","screenX","outerHeight","screenY","toolbar","menubar","resizable","scrollbars","open","close","writeToWindow","write","err2","writeElementToWindow","tag","tagName","children","removeChild","setStyle","styleText","styleSheet","cssText","createTextNode","awaitFrameLoadPromises","awaitFrameLoad","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","createElement","class","className","setAttribute","attributes","innerHTML","iframe","allowTransparency","backgroundColor","border","hasAttribute","removeEventListener","bindEvents","eventNames","VENDOR_PREFIXES","setVendorCSS","capitalizedName","ANIMATION_START_EVENTS","ANIMATION_END_EVENTS","animate","clean","hasStarted","startTimeout","endTimeout","startEvent","endEvent","cleanUp","animationName","stopPropagation","makeElementVisible","setProperty","makeElementInvisible","showElement","hideElement","destroyElement","showAndAnimate","animation","animateAndHide","addClass","classList","add","removeClass","remove","isElementClosed","watchElementForClose","fixScripts","newScript","textContent","replaceChild","onResize","currentWidth","currentHeight","check","newWidth","newHeight","observer","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","getResourceLoadTime","getEntries","entries","duration","isShadowElement","getShadowRoot","getShadowHost","shadowRoot","insertShadowSlot","shadowHost","slotName","slot","slotProvider","getStorage","lifetime","STORAGE_KEY","accessedStorage","getState","localStorageEnabled","storage","rawStorage","parse","getSession","session","__session__","created","guid","getID","getSessionState","state","getSessionID","getBelterExperimentStorage","isEventUnique","loggedBeacons","experiment","sample","logTreatment","logCheckpoint","throttle","throttlePercentiles","getThrottlePercentile","group","treatment","started","forced","isEnabled","isDisabled","getTreatment","log","checkpoint","payload","logStart","logComplete","getGlobalNameSpace","version","globalKey","namespace","defValue","headerBuilders","request","headers","json","data","normalizedHeaders","builtHeaders","headerBuilder","xhr","XMLHttpRequest","responseHeaders","rawHeaders","trim","parseHeaders","getAllResponseHeaders","contentType","isJSON","responseBody","responseText","evt","setRequestHeader","ontimeout","send","addHeaderBuilder","TYPES","memoized","isPerc","isPx","toNum","toPx","toCSS","percOf","num","normalizeDimension","dim","wrapPromise","expected","timer","expect","avoid","expectError","wait","pop"],"mappings":"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","file":"belter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"belter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"belter\"] = factory();\n\telse\n\t\troot[\"belter\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    const userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    const mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    const mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            const status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    const userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\nexport function isChrome(ua? : string = getUserAgent()) : boolean {\n    return (/Chrome|Chromium|CriOS/).test(ua);\n}\n\nexport function isSafari(ua? : string = getUserAgent()) : boolean {\n    return (/Safari/).test(ua) && !isChrome(ua);\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nconst memoizedFunctions = [];\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : F & {| reset : () => void |} {\n    const cacheMap = new WeakMap();\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        const cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        const key : string = serializeArgs(args);\n\n        const cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    memoizedFunctions.push(memoizedFunction);\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    for (const memoizedFunction of memoizedFunctions) {\n        memoizedFunction.reset();\n    }\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    // eslint-disable-next-line compat/compat\n    if (Object.assign) {\n        // eslint-disable-next-line compat/compat\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    const result = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            const interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : { [string] : string }, hash? : { [string] : string } |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        // eslint-disable-next-line compat/compat\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n        \n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) { // eslint-disable-line unicorn/prefer-event-key\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : {| host? : string, path : string |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator;\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    const name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {|\n    style? : {| [ string ] : string |},\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : {| [ string ] : string |},\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || {};\n    const style = options.style || {};\n\n    const frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        const loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    if (isShadowElement(shadowHost)) {\n        throw new Error(`Host element is also in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n    \n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    return slotProvider;\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {|\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n|};\n\nconst DEFAULT_SESSION_STORAGE = 20 * 60 * 1000;\n\nexport function getStorage({ name, lifetime = DEFAULT_SESSION_STORAGE } : {| name : string, lifetime? : number |}) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            const localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                const rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            const result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                const now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, lifetime } ]);\n}\n","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport type Experiment = {|\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : { [string] : ?string }) => Experiment,\n    logStart : (payload? : { [string] : ?string }) => Experiment,\n    logComplete : (payload? : { [string] : ?string }) => Experiment\n|};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {|\n    name : string,\n    sample? : number,\n    logTreatment? : ({| name : string, treatment : string, payload : { [string] : ?string } |}) => void,\n    logCheckpoint? : ({| name : string, treatment : string, checkpoint : string, payload : { [string] : ?string } |}) => void\n|};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    const throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    const treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : { [string] : ?string } = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ JSON.stringify(payload) }`)) {\n                logTreatment({ name, treatment, payload });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }_${ JSON.stringify(payload) }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : { [string] : ?string } = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : { [string] : ?string } = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : {| name : string, version? : string |}) : {| get : (string, defValue? : T) => T |} {\n\n    const global = getGlobal();\n    const globalKey = `__${ name }__${ version }_global__`;\n\n    const namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            const item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {|\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : $ReadOnlyArray<mixed> | Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n|};\n\ntype ResponseType = {|\n    status : number,\n    headers : { [string] : string },\n    body : Object\n|};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nconst headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    const result = {};\n    for (const line of rawHeaders.trim().split('\\n')) {\n        const [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        const normalizedHeaders = {};\n\n        for (const key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (const headerBuilder of headerBuilders) {\n            const builtHeaders = headerBuilder();\n\n            for (const key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        const xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            const responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            const contentType = responseHeaders['content-type'];\n            const isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            const res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (const key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n","/* @flow */\n\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\ndeclare var __TEST__ : boolean;\n\nexport type JSONPrimitive = string | boolean | number;\nexport type JSONObject = { [string] : JSONPrimitive | JSONObject } | $ReadOnlyArray<JSONPrimitive | JSONObject>;\nexport type JSONType = JSONObject | JSONPrimitive;\n\nexport type CancelableType = {|\n    cancel : () => void\n|};\n","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    const match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { noop, tryCatch, removeFromArray } from './util';\n\ntype Prom<X> = Promise<X> | ZalgoPromise<X>; // eslint-disable-line no-restricted-globals, promise/no-native\n\ntype Handler = <T, A : $ReadOnlyArray<mixed>>(name : string, fn? : (...args : A) => T) => (...args : A) => T; // eslint-disable-line no-undef\ntype Wrapper<T> = ({| expect : Handler, avoid : Handler, expectError : Handler, error : Handler, wait : () => Prom<void> |}) => (Prom<T> | void);\n\nexport function wrapPromise<T>(method : Wrapper<T>, { timeout = 5000 } : {| timeout? : number |} = {}) : ZalgoPromise<void> {\n    const expected : Array<string> = [];\n    const promises : Array<ZalgoPromise<*>> = [];\n\n    const timer = setTimeout(() => {\n        if (expected.length) {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ expected[0] } to be called`)));\n        }\n    }, timeout);\n\n    const expect : Handler = (name, fn = noop) => {\n        expected.push(name);\n        \n        // $FlowFixMe\n        return function expectWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            const { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                promises.push(ZalgoPromise.asyncReject(error));\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result));\n            return result;\n        };\n    };\n\n    const avoid : Handler = (name : string, fn = noop) => {\n\n        // $FlowFixMe\n        return function avoidWrapper(...args) : * {\n            promises.push(ZalgoPromise.asyncReject(new Error(`Expected ${ name } to not be called`)));\n            // $FlowFixMe\n            return fn.call(this, ...args);\n        };\n    };\n\n    const expectError : Handler = (name, fn = noop) => {\n        expected.push(name);\n\n        // $FlowFixMe\n        return function expectErrorWrapper(...args) : * {\n            removeFromArray(expected, name);\n\n            // $FlowFixMe\n            const { result, error } = tryCatch(() => fn.call(this, ...args));\n\n            if (error) {\n                throw error;\n            }\n\n            promises.push(ZalgoPromise.resolve(result).then(() => {\n                throw new Error(`Expected ${ name } to throw an error`);\n            }, noop));\n            return result;\n        };\n    };\n\n    const wait = () => {\n        return ZalgoPromise.try(() => {\n            if (promises.length) {\n                return promises.pop();\n            }\n        }).then(() => {\n            if (promises.length) {\n                return wait();\n            }\n            if (expected.length) {\n                return ZalgoPromise.delay(10).then(wait);\n            }\n        });\n    };\n\n    promises.push(ZalgoPromise.try(() => method({ expect, avoid, expectError, error: avoid, wait })));\n\n    return wait().then(() => {\n        clearTimeout(timer);\n    });\n}\n"],"sourceRoot":""}